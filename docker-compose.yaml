x-common-environment:
  &default-env
  environment:
    - POSTGRES_HOST=postgres
    - POSTGRES_USERNAME=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DATABASE=simbir-health
    - POSTGRES_SCHEMA=public
    - JWT_ACCESS_SECRET=qBTmv4oXFFR2GwjexDJ4t6fsIUIUhhXqlktXjXdkcyygs8nPVEwMfo29VDRRepYDVV5IkIxBMzr7OEHXEHd37w
    - JWT_REFRESH_SECRET=c2Rmc2RuZmpzZGZzZGRzZmpoc2RqYmZzZGZzZGZqc2RqYmZic2Rmd3NkZmpzaGRqZmhzZGpoZmpkc2FzZGF1YmVyZXJic25lYnJzZXJlcmU=
    - ACCOUNT_SERVICE_URL=http://account-service:8081/api
    - DOCUMENT_SERVICE_URL=http://document-service:8084
    - HOSPITAL_SERVICE_URL=http://hospital-service:8082/api/Hospitals
    - TIMETABLE_SERVICE_URL=http://timetable-service:8083
    - ELASTICSEARCH_HOST_AND_PORT=elasticsearch:9200
    - DEFAULT_LOCALE=en
    - MIN_OFFSET=0
    - MIN_LIMIT=5
    - MAX_LIMIT=100

services:
  account-service:
    image: account-service:latest
    build: account-service
    restart: "no"
    ports:
      - "8081:8081"
    <<: *default-env
    depends_on:
      postgres:
        condition: service_healthy
  document-service:
    image: document-service:latest
    build: document-service
    restart: "on-failure:10"
    ports:
      - "8084:8084"
    <<: *default-env
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
  hospital-service:
    image: hospital-service:latest
    build: hospital-service
    restart: "no"
    ports:
      - "8082:8082"
    <<: *default-env
    depends_on:
      postgres:
        condition: service_healthy
  timetable-service:
    image: timetable-service:latest
    build: timetable-service
    restart: "no"
    ports:
      - "8083:8083"
    <<: *default-env
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17.0
    restart: "no"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql-scripts/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: simbir-health
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  elasticsearch:
    image: elasticsearch:8.15.3
    restart: "no"
    ports:
      - "9200:9200"
    environment:
      xpack.security.enabled: "false"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
    healthcheck:
      test: curl -u --fail -s http://localhost:9200 || exit 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    image: kibana:8.15.3
    restart: "no"
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    depends_on:
      elasticsearch:
        condition: service_healthy
volumes:
  postgres_data: